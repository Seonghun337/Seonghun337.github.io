{"version":3,"sources":["webpack:///./src/components/HeroBanner/style.js","webpack:///./src/components/HeroBanner/index.js","webpack:///./src/components/Introduction/style.js","webpack:///./src/components/Introduction/index.js","webpack:///./src/components/SkillFierd/SkillCard/index.js","webpack:///./src/components/SkillFierd/index.js","webpack:///./src/components/Timeline/CareerCard/index.js","webpack:///./src/components/Timeline/index.js","webpack:///./src/pages/index.js"],"names":["Carousel","styled","div","theme","size","validWidth","Saparator","h2","HeroBanner","queryResult","useStaticQuery","data","allMarkdownRemark","edges","markdownRemark","frontmatter","Container","map","obj","item","node","ProjectCard","thumbnail","title","team","desc","stack","ProfileImage","Image","ProfileText","Wrapper","Introduction","fluid","profileImage","childImageSharp","alt","profileText","colors","gray1","IconWrapper","mainColor2","gray2","TitleBox","DescBox","translateLoop","keyframes","ViewMore","a","SkillCard","props","Icon","name","icon","width","height","SkillFierd","metadata","IntroTitle","Date","fontColorLight","isLeft","Title","Desc","CareerCard","isBlank","startDate","endDate","VerticalLine","mainColor3","LayerWrapper","TimeDot","white","Blank","Timeline","careerType","IndexPage","Layout"],"mappings":"yKAwBaA,GArBaC,IAAOC,IAAV,oEAAGD,CAAH,uHAaAA,IAAOC,IAAV,iEAAGD,CAAH,4CAEK,qBAAEE,MAAiBC,KAAKC,cAMzBJ,IAAOC,IAAV,kEAAGD,CAAH,uEAuBRK,GAbSL,IAAOC,IAAV,gEAAGD,CAAH,MAaMA,IAAOM,GAAV,mEAAGN,CAAH,mR,oCCqCPO,EA1EI,WACf,IA6BMC,EAAcC,yBA7BL,aA8BTC,EAAOF,EAAYG,kBAAkBC,MAC1BJ,EAAYK,eAAeC,YAG5C,OACQ,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,KAWQL,EAAKM,KAAI,SAACC,GACN,IAAMC,EAAOD,EAAIE,KAAKL,YACtB,OACQ,kBAACM,EAAA,EAAD,CACIC,UAAWH,EAAKG,UAChBC,MAAOJ,EAAKI,MACZC,KAAML,EAAKK,KACXC,KAAMN,EAAKM,KACXC,MAAOP,EAAKO,YAMpC,sCACA,kBAAC,EAAD,MACA,0M,qBCtEHC,EAAe1B,YAAO2B,KAAV,0EAAG3B,CAAH,iDAMZ4B,EAAc5B,IAAOC,IAAV,yEAAGD,CAAH,kFAQX6B,EAAU7B,IAAOC,IAAV,qEAAGD,CAAH,6IAOK,qBAAEE,MAAiBC,KAAKC,c,wBCyBlC0B,EA3CM,WACjB,IAkBMpB,EAAOD,yBAlBG,cAkBwBI,eAAeC,YAEvD,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAOO,MAAOZ,EAAKY,QACnB,kBAAC,IAAD,MACA,kBAAC,EAAD,KAGI,kBAAC,EAAD,CACIS,MAAOrB,EAAKsB,aAAaC,gBAAgBF,MACzCG,IAAKxB,EAAKY,QAGd,kBAAC,EAAD,KACKZ,EAAKyB,gB,YCpCpBN,EAAU7B,IAAOC,IAAV,yEAAGD,CAAH,8PACW,qBAAEE,MAAiBkC,OAAOC,SAoB5CC,EAActC,IAAOC,IAAV,6EAAGD,CAAH,qIAIO,qBAAEE,MAAiBkC,OAAOG,cACrC,qBAAErC,MAAiBkC,OAAOI,SAOjCC,EAAWzC,IAAOC,IAAV,0EAAGD,CAAH,mDAMR0C,EAAU1C,IAAOC,IAAV,yEAAGD,CAAH,kDAMP2C,EAAgBC,YAAH,gGAYbC,EAAW7C,IAAO8C,EAAV,0EAAG9C,CAAH,sIAQR6B,EACec,GAoCNI,EA5BG,SAACC,GAGf,OACI,kBAAC,EAAD,KACI,kBAACV,EAAD,KACI,kBAACW,EAAA,EAAD,CACIC,KAAMF,EAAMG,KACZC,MAAM,KACNC,OAAO,QAGf,kBAACZ,EAAD,KAAWO,EAAM1B,OACjB,kBAACoB,EAAD,KAAUM,EAAMxB,MAChB,kBAACqB,EAAD,KACI,wCACA,kBAACI,EAAA,EAAD,CACIC,KAAK,eACLE,MAAM,KACNC,OAAO,UC1FrBxB,EAAU7B,IAAOC,IAAV,sEAAGD,CAAH,8EA4DEsD,EApDI,WAEf,IAsBM9C,EAAcC,yBAtBH,cAuBX8C,EAAW/C,EAAYK,eAAeC,YACtCJ,EAAOF,EAAYG,kBAAkBC,MAE3C,OACI,kBAACG,EAAA,EAAD,KACI,kBAACyC,EAAA,EAAD,CAAYlC,MAAOiC,EAASjC,QAC5B,kBAAC,IAAD,MACA,kBAAC,EAAD,KAEIZ,EAAKM,KAAI,SAACC,GACN,IAAMC,EAAOD,EAAIE,KAAKL,YACtB,OACI,kBAAC,EAAD,CACIqC,KAAMjC,EAAKiC,KACX7B,MAAOJ,EAAKI,MACZE,KAAMN,EAAKM,aCnDjCK,EAAU7B,IAAOC,IAAV,yEAAGD,CAAH,sIAMuB,qBAAEE,MAAiBC,KAAKC,cAQtDqD,EAAOzD,IAAOC,IAAV,sEAAGD,CAAH,8LAIc,qBAAEE,MAAiBkC,OAAOG,cAMrC,qBAAErC,MAAiBkC,OAAOsB,kBAEH,qBAAExD,MAAiBC,KAAKC,cAClD,SAAA4C,GACE,GAAGA,EAAMW,OACL,MAAM,uEAQhBC,EAAQ5D,IAAOC,IAAV,uEAAGD,CAAH,8EAIyB,qBAAEE,MAAiBC,KAAKC,cAClD,SAAA4C,GACE,GAAGA,EAAMW,OACL,MAAM,kGAShBE,EAAO7D,IAAOC,IAAV,sEAAGD,CAAH,+EAI0B,qBAAEE,MAAiBC,KAAKC,cAClD,SAAA4C,GACE,GAAGA,EAAMW,OACL,MAAM,gEA+BPG,EAtBI,SAACd,GAEhB,OACI,kBAAC,EAAD,CAASe,QAASf,EAAMe,SAEpBf,EAAMW,OACH,kBAAC,EAAD,CAAMA,QAAQ,GAAOX,EAAMgB,WAC3B,kBAAC,EAAD,KAAOhB,EAAMgB,UAAb,MAA2BhB,EAAMiB,SAEpC,kBAACL,EAAD,CAAOD,OAAQX,EAAMW,QAChBX,EAAM1B,OAEX,kBAACuC,EAAD,CAAMF,OAAQX,EAAMW,QACfX,EAAMxB,QC7EjBK,EAAU7B,IAAOC,IAAV,oEAAGD,CAAH,wEAWPkE,EAAelE,IAAOC,IAAV,yEAAGD,CAAH,mJAOL,qBAAEE,MAAiBkC,OAAO+B,cAGH,qBAAEjE,MAAiBC,KAAKC,cAOtDgE,EAAepE,IAAOC,IAAV,yEAAGD,CAAH,oFAUZqE,EAAUrE,IAAOC,IAAV,oEAAGD,CAAH,kNAIa,qBAAEE,MAAiBkC,OAAO+B,cAC5B,qBAAEjE,MAAiBkC,OAAOkC,SAQd,qBAAEpE,MAAiBC,KAAKC,cAOtDmE,EAAQvE,IAAOC,IAAV,kEAAGD,CAAH,8EAKyB,qBAAEE,MAAiBC,KAAKC,cAsF7CoE,EAhFE,WAEb,IAuBMhE,EAAcC,yBAvBF,cAwBZC,EAAOF,EAAYG,kBAAkBC,MACrC2C,EAAW/C,EAAYK,eAAeC,YAG5C,OACI,kBAACC,EAAA,EAAD,KACI,kBAACyC,EAAA,EAAD,CAAYlC,MAAOiC,EAASjC,QAC5B,kBAAC,IAAD,MACA,kBAAC,EAAD,KACI,kBAAC4C,EAAD,MAEIxD,EAAKM,KAAI,SAACC,GACN,IAAMC,EAAOD,EAAIE,KAAKL,YACtB,OACQ,kBAACsD,EAAD,KAEsB,eAAlBlD,EAAKuD,WAED,oCACI,kBAAC,EAAD,CACId,OAA0B,eAAlBzC,EAAKuD,WACbnD,MAAOJ,EAAKI,MACZE,KAAMN,EAAKM,KACXwC,UAAW9C,EAAK8C,UAChBC,QAAS/C,EAAK+C,UAElB,kBAACI,EAAD,MACA,kBAACE,EAAD,OAIJ,oCACI,kBAACA,EAAD,MACA,kBAACF,EAAD,MACA,kBAAC,EAAD,CACI/C,MAAOJ,EAAKI,MACZE,KAAMN,EAAKM,KACXwC,UAAW9C,EAAK8C,UAChBC,QAAS/C,EAAK+C,kBCpH/CS,UAZG,WAChB,OACE,kBAACC,EAAA,EAAD,KAEE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"component---src-pages-index-js-d6cb19c7bd6dda365bca.js","sourcesContent":["// import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Background = styled.div\r\n`\r\n    background-color: #F7FAFC;\r\n    width: 100%;\r\n    \r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\nexport const Wrapper = styled.div\r\n`\r\n    @media (max-width: ${({theme}) => theme.size.validWidth}px;){\r\n        width: auto;\r\n    }\r\n    \r\n`;\r\n\r\nexport const Carousel = styled.div\r\n`\r\n    height: 350px;    \r\n    margin-top: 80px;\r\n    margin-bottom: 60px;\r\n\r\n    overflow: hidden;\r\n\r\n`\r\n\r\nexport const Banner = styled.div\r\n`\r\n\r\n`\r\n\r\n\r\n// export const NavItem = styled.div\r\n// `\r\n//     display:inline;\r\n//     padding-left:30px;\r\n\r\n// `\r\n\r\nexport const Saparator = styled.h2\r\n`\r\n    position: relative;\r\n    width: 0.5rem;\r\n    height: 2rem;\r\n    margin: -0.5rem auto 1.5rem;\r\n\r\n    // margin-block-start: 0.83em;\r\n    // margin-block-end: 0.83em;\r\n    // margin-inline-start: 0px;\r\n    // margin-inline-end: 0px;\r\n\r\n    &:before {\r\n        content: \"\";\r\n        background-color: black;\r\n        height:100%;\r\n        width:1px;\r\n        position: absolute;\r\n        left: 0px;\r\n    }\r\n    &:after {\r\n        content: \"\";\r\n        background-color: black;\r\n        height: 1.5rem;\r\n        width: 1px;\r\n        position: absolute;\r\n        margin-left: 0.25rem;\r\n\r\n        // box-sizing: border-box;\r\n        // border: 0 solid #000000;\r\n    }\r\n\r\n`","import React, { Component } from 'react'\r\nimport * as Styled from \"./style\";\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport Container from \"../ui/Container\"\r\n\r\n\r\nimport ProjectCard from \"../ui/ProjectCard\"\r\n\r\n\r\n\r\nconst HeroBanner = () => {\r\n    const workQuery = graphql`\r\n        query{\r\n            allMarkdownRemark(filter: {frontmatter: {category: {eq: \"work\"}}}) {\r\n                edges {\r\n                    node {\r\n                            frontmatter {\r\n                                thumbnail{\r\n                                    childImageSharp{\r\n                                        fluid{\r\n                                            ...GatsbyImageSharpFluid\r\n                                        }\r\n                                    }\r\n                                }\r\n                                title\r\n                                team\r\n                                desc\r\n                                stack\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n            markdownRemark(frontmatter: {category: {eq: \"work metadata\"}}) {\r\n                frontmatter {\r\n                    title\r\n                }\r\n            }\r\n        }\r\n    `\r\n\r\n    const queryResult = useStaticQuery(workQuery)\r\n    const data = queryResult.allMarkdownRemark.edges;\r\n    const metadata = queryResult.markdownRemark.frontmatter;\r\n\r\n\r\n    return(\r\n            <Container>\r\n                <Styled.Carousel>\r\n                    {/* <ProjectCard\r\n                        title=\"로렌 입숨\"\r\n                        team={[\"김가가\",\"박바바\"]}\r\n                        desc=\"가진 때에, 따뜻한 보이는 품에 영락과 긴지라 \r\n                        청춘 그들은 있다. 남는 가치를 것이다. 인생에\r\n                        몸이 스며들어 우리의 품으며, 피어나기 가진\r\n                        얼마나 인도하겠다는 아니다.\"\r\n                        stack=\"Nodejs, Firebase, FCM, Expressjs, Vuejs\"\r\n                    /> */}\r\n                    {\r\n                        data.map((obj) => {\r\n                            const item = obj.node.frontmatter;\r\n                            return(\r\n                                    <ProjectCard\r\n                                        thumbnail={item.thumbnail}\r\n                                        title={item.title}\r\n                                        team={item.team}\r\n                                        desc={item.desc}\r\n                                        stack={item.stack}              \r\n                                    />\r\n                            )\r\n                        })\r\n                    }\r\n                </Styled.Carousel>\r\n                <h1>DEVHUN</h1>\r\n                <Styled.Saparator></Styled.Saparator>\r\n                <p>\r\n                    안녕하세요. 스며들어 온갖 밥을 심장의 찾아다. 인생에 몸이다. 남는 가치를 것이다. 인생에 몸이 스며들어 \r\n                    우리의 품으며, 피어나기 가진 얼마나 인도하겠다는 아니다. 스며들어 온갖 밥을 심장의 찾아다. 가진 때에, \r\n                    따뜻한 보이는 품에 영락과 긴지라 청춘 그들은 있다. 남는가치를 것이다. 인생에 몸이다.\r\n                </p>\r\n            </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default HeroBanner;","import Image from \"gatsby-image\"\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const ProfileImage = styled(Image)`\r\n    min-width: 134px;\r\n    height: 178px;\r\n    margin:0 50px;\r\n`\r\n\r\nexport const ProfileText = styled.div`\r\n    max-width: 400px;\r\n    font-size: 13px;\r\n    font-weight: 200;\r\n    line-height: 19px;\r\n    margin: 40px;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: 45px 0;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: auto 20px;\r\n\r\n    @media (max-width: ${({theme}) => theme.size.validWidth}px){\r\n        flex-direction:column;\r\n    }\r\n`","import React, { Component } from 'react'\r\nimport * as Styled from \"./style\";\r\nimport Container from \"../ui/Container\";\r\nimport Saparator from \"../ui/Saparator\";\r\nimport Title from \"../ui/IntroTitle\";\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nconst Introduction = () => {\r\n    const aboutQuery = graphql`\r\n        query{\r\n            markdownRemark(frontmatter: {category: {eq: \"introduction metadata\"}}) {\r\n                frontmatter {\r\n                    title\r\n                    profileText\r\n                    profileImage{\r\n                        childImageSharp{\r\n                            fluid{\r\n                                ...GatsbyImageSharpFluid\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `\r\n\r\n    const data = useStaticQuery(aboutQuery).markdownRemark.frontmatter;\r\n\r\n    return(\r\n        <Container>\r\n            <Title title={data.title}></Title>\r\n            <Saparator />\r\n            <Styled.Wrapper>\r\n                {/* <Img fluid={data.ProfileImage}></Img> */}\r\n                {/* <Img fluid={data.profileImage.childImageSharp.fluid}></Img> */}\r\n                <Styled.ProfileImage\r\n                    fluid={data.profileImage.childImageSharp.fluid}\r\n                    alt={data.title}\r\n                />\r\n                \r\n                <Styled.ProfileText>\r\n                    {data.profileText}\r\n                    \r\n                </Styled.ProfileText>\r\n            </Styled.Wrapper>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default Introduction;\r\n\r\n","import React, { Component } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Image from \"gatsby-image\"\r\nimport Icon from \"../../ui/Icon\"\r\n\r\nconst Wrapper = styled.div`\r\n    border: 1px solid ${({theme}) => theme.colors.gray1};\r\n    width: 300px;\r\n    height: 130px;\r\n    border-radius: 17px;\r\n    padding: 12px;\r\n    margin: 15px auto;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n\r\n\r\n    &:hover{\r\n        transform: scale(1.03,1.03);\r\n    }\r\n    transition: transform .1s linear;\r\n    \r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius:50%;    \r\n    border: 1px solid ${({theme}) => theme.colors.mainColor2};\r\n    color: ${({theme}) => theme.colors.gray2};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n`\r\n\r\nconst TitleBox = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    padding: 6px 0;\r\n`\r\n\r\nconst DescBox = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 200;\r\n    margin: 4px 0;\r\n`\r\n\r\nconst translateLoop = keyframes`\r\n    0% {\r\n        transform: translate(0px);\r\n    }\r\n    50% {\r\n        transform: translate(4px);\r\n    }\r\n    100% {\r\n        transform: translate(0px);\r\n    }\r\n`\r\n\r\nconst ViewMore = styled.a`\r\n    font-size: 16px;\r\n    font-weight: 200;\r\n    margin: auto 0;\r\n    display: flex;\r\n    align-items: flex-end;\r\n\r\n    \r\n    ${Wrapper}:hover & {\r\n        animation: ${translateLoop} .7s 0s linear infinite;\r\n    }\r\n\r\n`\r\n\r\n\r\n\r\n\r\nconst SkillCard = (props) => {\r\n\r\n\r\n    return(\r\n        <Wrapper>\r\n            <IconWrapper>\r\n                <Icon \r\n                    name={props.icon}\r\n                    width=\"30\" \r\n                    height=\"30\"\r\n                />\r\n            </IconWrapper>\r\n            <TitleBox>{props.title}</TitleBox>\r\n            <DescBox>{props.desc}</DescBox>\r\n            <ViewMore>\r\n                <a>view more</a>\r\n                <Icon\r\n                    name=\"ChevronRight\"\r\n                    width=\"12\"\r\n                    height=\"12\"\r\n                />\r\n            </ViewMore>\r\n        </Wrapper>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default SkillCard;\r\n","import React, { Component } from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Container from '../ui/Container';\r\nimport SkillCard from './SkillCard'\r\nimport IntroTitle from '../ui/IntroTitle';\r\nimport Saparator from '../ui/Saparator';\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 45px auto;\r\n\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    align-content: space-around;\r\n`\r\n\r\nconst SkillFierd = () => {\r\n\r\n    const skillsQuery = graphql`\r\n        query{\r\n            allMarkdownRemark(filter: {frontmatter: {category: {eq: \"skillField\"}}}) {\r\n                edges {\r\n                node {\r\n                        frontmatter {\r\n                            title\r\n                            desc\r\n                            icon\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            markdownRemark(frontmatter: {category: {eq: \"skillField metadata\"}}) {\r\n                frontmatter {\r\n                    title\r\n                    \r\n                }\r\n            }\r\n        }\r\n    `\r\n\r\n    const queryResult = useStaticQuery(skillsQuery)\r\n    const metadata = queryResult.markdownRemark.frontmatter;\r\n    const data = queryResult.allMarkdownRemark.edges;\r\n\r\n    return(\r\n        <Container>\r\n            <IntroTitle title={metadata.title}/>\r\n            <Saparator />\r\n            <Wrapper>\r\n            {\r\n                data.map((obj) => {\r\n                    const item = obj.node.frontmatter;\r\n                    return(\r\n                        <SkillCard\r\n                            icon={item.icon}\r\n                            title={item.title}\r\n                            desc={item.desc}              \r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default SkillFierd;\r\n","import React, { Component } from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    width:50%;\r\n    box-sizing: border-box;\r\n    padding: 20px;\r\n\r\n\r\n    @media screen and (max-width: ${({theme}) => theme.size.validWidth}px){\r\n        width:80%;\r\n        margin:0 auto;\r\n        padding: 20px 0 0 80px;\r\n    }\r\n\r\n`\r\n\r\nconst Date = styled.div`\r\n    width:146px;\r\n    height: 17px;\r\n    border-radius: 9px;\r\n    border: 1px solid ${({theme}) => theme.colors.mainColor2};\r\n\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items: center;\r\n    font-size: 11px;\r\n    color: ${({theme}) => theme.colors.fontColorLight};\r\n\r\n    @media screen and (min-width: ${({theme}) => theme.size.validWidth}px){\r\n        ${props => {\r\n            if(props.isLeft){\r\n                return `\r\n                    margin: auto 0 auto auto;\r\n                `;\r\n            }\r\n        }};\r\n    }\r\n`\r\n\r\nconst Title = styled.div`\r\n    margin: 8px auto;\r\n    font-size: 16px;\r\n\r\n    @media screen and (min-width: ${({theme}) => theme.size.validWidth}px){\r\n        ${props => {\r\n            if(props.isLeft){\r\n                return `\r\n                    text-align: right;\r\n                    clear: both;\r\n                `\r\n            }\r\n        }};\r\n    }\r\n`\r\n\r\nconst Desc = styled.div`\r\n    margin: 12px auto;\r\n    font-size: 12px;\r\n\r\n    @media screen and (min-width: ${({theme}) => theme.size.validWidth}px){\r\n        ${props => {\r\n            if(props.isLeft){\r\n                return `\r\n                    text-align: right;\r\n                `;\r\n            }\r\n        }};\r\n    }\r\n`\r\n\r\n\r\nconst CareerCard = (props) => {\r\n\r\n    return(\r\n        <Wrapper isBlank={props.isBlank}>\r\n            {\r\n            props.isLeft\r\n            ? (<Date isLeft={true}>{props.startDate}</Date>)\r\n            : (<Date>{props.startDate} - {props.endDate}</Date>)\r\n            }\r\n            <Title isLeft={props.isLeft}>\r\n                {props.title}   \r\n            </Title> \r\n            <Desc isLeft={props.isLeft}>\r\n                {props.desc}\r\n            </Desc>\r\n\r\n        </Wrapper>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default CareerCard;\r\n","import React, { Component } from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Container from '../ui/Container';\r\nimport CareerCard from './CareerCard';\r\nimport IntroTitle from '../ui/IntroTitle';\r\nimport Saparator from '../ui/Saparator';\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 45px auto;\r\n    \r\n    position: relative;\r\n\r\n    &:after {\r\n        content: \"\";\r\n        clear: both;\r\n    }\r\n`\r\n\r\nconst VerticalLine = styled.div`\r\n    width: 0;\r\n    height: 100%;\r\n    left: 50%;\r\n    z-index: 1;\r\n    border: solid 0.5px;\r\n    position: absolute;\r\n    color: ${({theme}) => theme.colors.mainColor3};\r\n\r\n    left:20%;\r\n    @media screen and (min-width: ${({theme}) => theme.size.validWidth}px){\r\n        left:50%;\r\n    }\r\n\r\n`\r\n\r\n\r\nconst LayerWrapper = styled.div`\r\n    width: 100%;\r\n\r\n    position: relative;\r\n    display:flex;\r\n    justify-content:center;\r\n    padding: auto;\r\n`\r\n\r\n\r\nconst TimeDot = styled.div`\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 50%;\r\n    border: 1.5px solid ${({theme}) => theme.colors.mainColor3};\r\n    background-color: ${({theme}) => theme.colors.white};\r\n\r\n\r\n    position: absolute;\r\n    z-index: 2;\r\n    top:22px;\r\n    transform:translateX(-50%);\r\n    left:20%;\r\n    @media screen and (min-width: ${({theme}) => theme.size.validWidth}px){\r\n        left:50%;\r\n    }\r\n\r\n    \r\n`\r\n\r\nconst Blank = styled.div`\r\n    width:50%;\r\n    height:auto;\r\n\r\n\r\n    @media screen and (max-width: ${({theme}) => theme.size.validWidth}px){\r\n        display:none;\r\n    }\r\n`\r\n\r\n\r\nconst Timeline = () => {\r\n\r\n    const careersQuery = graphql`\r\n        query{\r\n            allMarkdownRemark(filter: {frontmatter: {category: {eq: \"career\"}}}) {\r\n                edges {\r\n                node {\r\n                        frontmatter {\r\n                            title\r\n                            desc\r\n                            careerType\r\n                            startDate\r\n                            endDate\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            markdownRemark(frontmatter: {category: {eq: \"career metadata\"}}) {\r\n                frontmatter {\r\n                  title\r\n                }\r\n            }\r\n        }\r\n    `\r\n\r\n    const queryResult = useStaticQuery(careersQuery)\r\n    const data = queryResult.allMarkdownRemark.edges;\r\n    const metadata = queryResult.markdownRemark.frontmatter;\r\n\r\n\r\n    return(\r\n        <Container>\r\n            <IntroTitle title={metadata.title}/>\r\n            <Saparator />\r\n            <Wrapper>\r\n                <VerticalLine/>\r\n                {\r\n                    data.map((obj) => {\r\n                        const item = obj.node.frontmatter;\r\n                        return(\r\n                                <LayerWrapper>\r\n                                {\r\n                                    item.careerType!=='experience'\r\n                                    ? (\r\n                                        <>\r\n                                            <CareerCard\r\n                                                isLeft={item.careerType==='experience'?false:true}\r\n                                                title={item.title}\r\n                                                desc={item.desc}\r\n                                                startDate={item.startDate}\r\n                                                endDate={item.endDate}\r\n                                            />\r\n                                            <TimeDot/>\r\n                                            <Blank/>\r\n                                        </>\r\n                                    )\r\n                                    : (\r\n                                        <>\r\n                                            <Blank/>\r\n                                            <TimeDot/>\r\n                                            <CareerCard\r\n                                                title={item.title}\r\n                                                desc={item.desc}\r\n                                                startDate={item.startDate}\r\n                                                endDate={item.endDate}\r\n                                            />\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </LayerWrapper>\r\n                        )\r\n                    })\r\n                }\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default Timeline;\r\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport '../styles/global.css'\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport HeroBanner from \"../components/HeroBanner\"\r\nimport Introduction from \"../components/Introduction\"\r\nimport SkillField from \"../components/SkillFierd\"\r\nimport Timeline from \"../components/Timeline\"\r\n\r\n// import SEO from \"../components/seo\"\r\n\r\n\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <Layout>\r\n      {/* <SEO title=\"Home\" />    검색엔진최적화 */}\r\n      <HeroBanner/>\r\n      <Introduction/>\r\n      <SkillField />\r\n      <Timeline/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage;\r\n"],"sourceRoot":""}