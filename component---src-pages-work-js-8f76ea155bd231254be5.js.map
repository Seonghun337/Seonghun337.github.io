{"version":3,"sources":["webpack:///./src/components/Works/index.js","webpack:///./src/components/Works/tagbar.js","webpack:///./src/pages/work.js"],"names":["Wrapper","styled","div","theme","size","validWidth","colors","mainColor2","fontColorLight","props","isLeft","mainColor1","gray2","CardWrapper","Works","data","querydata","useStaticQuery","allMarkdownRemark","edges","Container","title","Saparator","map","obj","item","node","to","fields","slug","ProjectCard","hoverActive","thumbnail","frontmatter","team","date","desc","stack","WorkPage","Layout"],"mappings":"gPAUMA,G,oBCiDUC,IAAOC,IAAV,sEAAGD,CAAH,qJAQmB,qBAAEE,MAAkBC,KAAKC,WAAa,OAKvDJ,IAAOC,IAAV,qEAAGD,CAAH,+CAQOA,IAAOC,IAAV,yEAAGD,CAAH,sNAKQ,qBAAEE,MAAiBG,OAAOC,cAMrC,qBAAEJ,MAAiBG,OAAOE,kBAEH,qBAAEL,MAAiBC,KAAKC,cAClD,SAAAI,GACE,GAAGA,EAAMC,OACL,MAAM,uEAQFT,IAAOC,IAAV,0EAAGD,CAAH,qIAIO,qBAAEE,MAAiBG,OAAOK,cACrC,qBAAER,MAAiBG,OAAOM,SAOtBX,IAAOC,IAAV,uEAAGD,CAAH,sHAOc,qBAAEE,MAAiBG,OAAOK,cDjHtCV,IAAOC,IAAV,iEAAGD,CAAH,8EAOPY,EAAcZ,IAAOC,IAAV,qEAAGD,CAAH,sBA6EFa,EAvED,SAAC,GAAW,EAAVC,KAAW,IA+BjBC,EADcC,yBA3BL,cA4BeC,kBAAkBC,MAEhD,OACI,oCAEI,kBAACC,EAAA,EAAD,KAEI,kBAAC,IAAD,CAAOC,MAAM,OAAOX,OAAO,KAC3B,kBAACY,EAAA,EAAD,MAEA,kBAAC,EAAD,KAGIN,EAAUO,KAAI,SAACC,GACX,IAAMC,EAAOD,EAAIE,KACjB,OACI,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,OAAOC,MAClB,kBAAChB,EAAD,KACI,kBAACiB,EAAA,EAAD,CACIC,aAAa,EACbC,UAAWP,EAAKQ,YAAYD,UAC5BX,MAAOI,EAAKQ,YAAYZ,MACxBa,KAAMT,EAAKQ,YAAYC,KACvBC,KAAMV,EAAKQ,YAAYE,KACvBC,KAAMX,EAAKQ,YAAYG,KACvBC,MAAOZ,EAAKQ,YAAYI,iBE9DjDC,UATE,WACf,OACE,kBAACC,EAAA,EAAD,KAEI,kBAAC,EAAD","file":"component---src-pages-work-js-8f76ea155bd231254be5.js","sourcesContent":["import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Container from '../ui/Container'\r\nimport ProjectCard from '../ui/ProjectCard'\r\nimport Title from '../ui/IntroTitle'\r\nimport Saparator from '../ui/Saparator'\r\nimport Link from 'gatsby-link'\r\nimport TagBar from './tagbar'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 40px auto;\r\n`\r\n\r\nconst CardWrapper = styled.div`\r\n    margin-top: 60px;\r\n`\r\n\r\n\r\n\r\nconst Works = ({data}) => {\r\n\r\n    \r\n    const workQuery = graphql`\r\n        query{\r\n            allMarkdownRemark(filter: {frontmatter: {category: {eq: \"project\"}}}, sort: {fields: frontmatter___date, order: DESC}) {\r\n                edges {\r\n                    node {\r\n                            fields{\r\n                                slug\r\n                            }\r\n                            frontmatter {\r\n                                thumbnail{\r\n                                    childImageSharp{\r\n                                        fluid{\r\n                                            ...GatsbyImageSharpFluid\r\n                                        }\r\n                                    }\r\n                                }\r\n                                title\r\n                                team\r\n                                date\r\n                                desc\r\n                                stack\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    `\r\n    const queryResult = useStaticQuery(workQuery)\r\n    const querydata = queryResult.allMarkdownRemark.edges;\r\n\r\n    return(\r\n        <>\r\n\r\n            <Container>\r\n\r\n                <Title title=\"프로젝트\" isLeft=\"\"></Title>\r\n                <Saparator />\r\n                \r\n                <Wrapper>\r\n                {/* <TagBar></TagBar> */}\r\n                {\r\n                    querydata.map((obj) => {\r\n                        const item = obj.node;\r\n                        return(\r\n                            <Link to={item.fields.slug}>\r\n                                <CardWrapper>\r\n                                    <ProjectCard\r\n                                        hoverActive={true}\r\n                                        thumbnail={item.frontmatter.thumbnail}\r\n                                        title={item.frontmatter.title}\r\n                                        team={item.frontmatter.team}\r\n                                        date={item.frontmatter.date}\r\n                                        desc={item.frontmatter.desc}\r\n                                        stack={item.frontmatter.stack}              \r\n                                    />\r\n                                </CardWrapper>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n                </Wrapper>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Works;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Icon from \"../ui/Icon\"\r\nimport SkillField from '../SkillFierd';\r\nimport Container from '../ui/Container';\r\n\r\n\r\nconst TagBar = (props) => {\r\n    const workTypeQuery = graphql`\r\n    {\r\n    allMarkdownRemark(filter: {frontmatter: {category: {eq: \"skillField\"}}}) {\r\n        edges {\r\n        node {\r\n            frontmatter {\r\n            title\r\n            icon\r\n            }\r\n        }\r\n        }\r\n    }\r\n    }\r\n`\r\n\r\nconst queryResult = useStaticQuery(workTypeQuery)\r\nconst data = queryResult.allMarkdownRemark.edges;\r\n\r\n\r\n\r\n    return(\r\n                <Wrapper>\r\n                    {\r\n                        data.map((obj) => {\r\n                            const item = obj.node.frontmatter;\r\n                            return(\r\n                                <>\r\n                                    {/* <IconWrapper>\r\n                                        <Icon \r\n                                            name={item.icon}\r\n                                            width=\"30\" \r\n                                            height=\"30\"\r\n                                        />\r\n                                    </IconWrapper> */}\r\n                                    <TitleBox>{item.title.split(' ')[0]}</TitleBox>\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                </Wrapper>\r\n            \r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default TagBar;\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\nposition: absolute;\r\nleft: 50%;\r\ntransform: translate(-460px,0%);\r\n\r\n@media screen and (max-width: ${({theme}) => (theme.size.validWidth + 300)}px){\r\n    display: none;\r\n}\r\n`\r\n\r\nconst NavBar = styled.div`\r\n    position: fixed;\r\n    top: 20%;\r\n    left: 5%;\r\n    width: 20%;\r\n\r\n`\r\n\r\nconst TypeButton = styled.div`\r\n    margin-bottom: 30px;\r\n    height: auto;\r\n    padding: 5px 0px;\r\n    border-radius: 15px;\r\n    border: 1px solid ${({theme}) => theme.colors.mainColor2};\r\n\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    color: ${({theme}) => theme.colors.fontColorLight};\r\n\r\n    @media screen and (min-width: ${({theme}) => theme.size.validWidth}px){\r\n        ${props => {\r\n            if(props.isLeft){\r\n                return `\r\n                    margin: auto 0 auto auto;\r\n                `;\r\n            }\r\n        }};\r\n    }\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius:50%;    \r\n    border: 1px solid ${({theme}) => theme.colors.mainColor1};\r\n    color: ${({theme}) => theme.colors.gray2};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n`\r\n\r\nconst TitleBox = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    padding: 7px 10px;\r\n    margin: auto 10px;\r\n    text-align: right;\r\n    &:hover{\r\n        background-color: ${({theme}) => theme.colors.mainColor1};\r\n    }\r\n\r\n`","import React from \"react\"\r\n\r\nimport '../styles/global.css'\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport Works from \"../components/Works\"\r\n\r\n\r\nconst WorkPage = () => {\r\n  return (\r\n    <Layout>\r\n      {/* <SEO title=\"Home\" />    검색엔진최적화 */}\r\n        <Works/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default WorkPage;\r\n"],"sourceRoot":""}